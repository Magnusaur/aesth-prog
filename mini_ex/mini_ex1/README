Her skriver jeg ting

https://cdn.rawgit.com/Magnusaur/aesth-prog/c90f43e9/mini_ex/mini_ex1/p5/empty-example/index.html

I must admit that my first coding project is rather unambitious. That's okay. We're just getting started. You can decorate the entire screen with purple dots. IF you press the left mouse button, the circle gets bigger and the color changes. Incredible!
I think it's safe to say, that I did not dive right into the many possibilities of p5. Feeling a degree of apprehension, I stuck with something conservative: something I at least knew would work.
Even so, the biggest source of frustration, but arguably also learning, was not the act of coding itself, but rather the logistics of uploading stuff on GitHub and discovering the relation between different files, code and the web.
How is everything connected? What's the exact relation between an index, a library, the code itself, and so on? I still have much to learn, but I found all of this, this sort of technical or semantic hierarchy, rather interesting. 
At first, I thought I might have been able to simply upload the sketch.js or index.html file(s). Perhaps both. But I needed the library as well. Without the library, the code is just a string of symbols. What kind of key or legend should be used to interpret them?

In comparing code to natural languages, it could be said the if someone speaks a language, then they possess the underlying 'library' - the repository of 'meaning' that corresponds, however arbitrarily, to certain signs. Natural languages, in a sense, expect a lot from the reader/listener. If I say "the shark is loose", then I expect you to know exactly what that means. This dependence, however, can also be a source of ambiguity. Certain words have multiple meanings - and multiple words are spelled or pronounced the same way.
Coding, on the other hand, does not appear to allow for such ambiguity. Or rather, ambiguity is certainly possible, in so far as the same piece of code could be (I imagine) interpreted in quite a few different ways. However, to rule out any such confusion, the code is accompanied by its own library - a strict legend or codex to interpret any given string of symbols in exactly one way.

Going forward
I still have lots and lots to learn. Looking at some of the other projects submitted, I can tell t
